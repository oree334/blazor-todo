@inject AppData appData

<h3>TodoList</h3>
<div>
    @if (this.Todos != null)
    {
        @foreach (var ToDoItem in Todos)
        {
            <ToDo ToDo="@ToDoItem" TodosComp="@this"> </ToDo>
        }
    }
</div>

<div>

    <input type="text" @bind-value="NewTodo" onkeyup="@txt_keyup" />
    <button @onclick="AddNewTodo" class="btn btn-primary"> Add </button>


</div>
<div class="@ToasCss">
    <div class="toast-msg">
        <div class="msg-box">
            this is the toast
        </div>
    </div>
</div>



@code {
    public bool ToastVisible { get; set; } = false;
    public string ToasCss { get { return ToastVisible ? "toast-show" : "toast-hide"; } }

    public List<ToDoItem>? Todos { get; set; }

    public string NewTodo { get; set; }
    public bool BtnEnable { get { return !string.IsNullOrWhiteSpace(NewTodo); } }

    protected override async Task OnInitializedAsync()
    {
        this.Todos = await appData.GetTodosAsync();
    }

    async Task AddNewTodo()
    {
        if (BtnEnable)
        {
            Todos.Add(new ToDoItem { Text = NewTodo });
            await appData.SaveTodosAsync(this.Todos);

            NewTodo = string.Empty;
        }

    }

    void txt_keyup()
    {
        this.StateHasChanged();
    }

    public async Task ShowToast()
    {
        ToastVisible = true;
        this.StateHasChanged();
        await Task.Delay(5000);
        ToastVisible = false;
        this.StateHasChanged();
    }
}
